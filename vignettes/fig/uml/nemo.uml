@startuml

class Config {
+tool
+config
+raw_schemas_all
+tidy_schemas_all
+initialize(tool,\n  pkg)
+print(...)
+read(pkg)
+get_raw_patterns()
+get_raw_versions()
+get_raw_descriptions()
+get_raw_schemas_all()
+get_raw_schema(x,\n  v)
+are_raw_schemas_valid()
+get_tidy_descriptions()
+get_tidy_schemas_all()
+get_tidy_schema(x,\n  v,\n  subtbl)
+clone(deep)
}

class Tool {
-needs_tidying
+name
+path
+config
+files
+tbls
+raw_schemas_all
+tidy_schemas_all
+get_tidy_schema
+get_raw_schema
+files_tbl
+initialize(name,\n  pkg,\n  path,\n  files_tbl)
+print(...)
+filter_files(include,\n  exclude)
+list_files(type)
+.parse_file(x,\n  name,\n  delim,\n  ...)
+.tidy_file(x,\n  name,\n  convert_types)
+.parse_file_nohead(x,\n  pname,\n  delim,\n  ...)
+.eval_func(fun,\n  envir)
+tidy(tidy,\n  keep_raw)
+write(odir,\n  format,\n  id,\n  dbconn)
+nemofy(odir,\n  format,\n  id,\n  dbconn,\n  include,\n  exclude)
+clone(deep)
}

class Tool1 {
+initialize(path,\n  files_tbl)
+parse_table1(x)
+tidy_table1(x)
+parse_table2(x)
+tidy_table2(x)
+parse_table3(x)
+tidy_table3(x)
+clone(deep)
}

class Workflow {
+name
+path
+tools
+files_tbl
-validate_tools(x)
+initialize(name,\n  path,\n  tools)
+print(...)
+filter_files(include,\n  exclude)
+list_files(type)
+tidy(tidy,\n  keep_raw)
+write(odir,\n  format,\n  id,\n  dbconn)
+nemofy(odir,\n  format,\n  id,\n  dbconn,\n  include,\n  exclude)
+get_raw_schemas_all()
+get_tidy_schemas_all()
+get_tbls()
+clone(deep)
}

class Workflow1 {
+initialize(path)
+clone(deep)
}
Tool1 <|-- Tool
Workflow1 <|-- Workflow
@enduml
